//Algorithm to display the element of stack
#include<stdio.h>
#define size 10
int main()
{
	int ch,top=-1,ele;
	int stack[size];

	printf("1.PUSH\n2.POP\n3.Display\n4.Exit\n");
	printf("Enter your choice:\n");
	scanf("%d",&ch);
	//while(1)
	switch(ch)
	{
		case 1: 
		{
			if(top==size-1)
			{	
				printf("Stack overflow\n");
				//exit(0);
			}
			else
			{
				printf("Enter the element you want to insert\n");
				scanf("%d",&ele);
				top=top+1;
				stack[top]=ele;
			}
		}
		break;
		case 2:
			{
				if(top==-1)
				{
					printf("Stack empty\n");
					//exit(0);
				}
				else
				{
					printf("Item deleted is %d ",stack[top]);
				}
				break;
			}
		case 3:
			{
				if(top==-1)
				{
					printf("Stack empty\n");
				//	exit(0);
				}
				else
				{
					for(int i=top;i>=0;i--)
					{
						scanf("%d",stack[i]);
						{
							printf("\n");
						}
					}
				}
				break;
			}
		case 4:
			{
				printf("Exit");
				return 0;
			}
		default:
				printf("Enter valid choice");
				break;
	}

	return 0;
}
 30  
anishu/binary search.cpp
@@ -0,0 +1,30 @@
//binary search
#include<stdio.h>
int main()
{
	int l=0,flag=0,h=h-1,mid=0,key=0,a[0];
	while(l<h)
	{
		mid=(l+h)/2;
		if(a[mid]<key)
		{
			l=mid+1;
		}
		else if(a[mid]>key)
		{
			h=mid-1;
		}
		else
		{
			flag=1;
			if(flag==1)
			{
				printf("Search successfull");
			}
			else
			{
				printf("Search Unsuccessfull");
			}
		}
	}
}
 35  
anishu/bubble search.cpp
@@ -0,0 +1,35 @@
//bubble search
#include<stdio.h>
int main()
{
	int i,j,n,temp=0;
	int a[10];

	printf("enter the size of array\n");
	scanf("%d",&n);

	printf("enter the elements in an array\n");
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);

	}
	for(i=0;i<n;i++)
	{
		for(j=0;j<n-i-1;j++)
		{
			if(a[j]>a[j+1])
			{
				temp =a[j];
				a[j]=a[j+1];
				a[j+1]=temp;
			}
		}
	}
		printf(" the elements in an array\n");
	for(j=0;j<n;j++)
	{
		printf("%d\n",a[j]);

	}
}
 40  
anishu/sequential search.cpp
@@ -0,0 +1,40 @@
//sequential search

//c program to show the time complexity

#include<stdio.h>
int main()
{
	int i,n,key,flag=0;
	int a[10];

	printf("enter the size of array\n");
	scanf("%d",&n);

	printf("enter the elements in an array\n");
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);

	}
	printf("enter an item to be searched\n");
	scanf("%d",&key);

	for(i=0;i<n;i++)
	{
		if(a[i]==key)
		{
			flag=1;
			break;
		}
	}
	if(flag==1)
	{
		printf("search successful");
		printf("position =%d\n ",i+1);
	}
	else{
		printf("search unsuccessful\n");
		return 0;
	}
}
